FILE
  PsiComment(comment)('##############################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# JBoss, Home of Professional Open Source')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Copyright 2009, Red Hat and individual contributors')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# by the @authors tag. See the copyright.txt in the distribution for a')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# full listing of individual contributors.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This is free software; you can redistribute it and/or modify it')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# under the terms of the GNU Lesser General Public License as')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# published by the Free Software Foundation; either version 2.1 of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# the License, or (at your option) any later version.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This software is distributed in the hope that it will be useful,')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# but WITHOUT ANY WARRANTY; without even the implied warranty of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Lesser General Public License for more details.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# You should have received a copy of the GNU Lesser General Public')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# License along with this software; if not, write to the Free')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# 02110-1301 USA, or see the FSF site: http://www.fsf.org.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# @authors Andrew Dinn')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('test call getCounter ALL in testMethod')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_CLASS)('CLASS')
    PsiWhiteSpace(' ')
    PsiElement(class reference)('TestAllAuxiliary')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_METHOD)('METHOD')
    PsiWhiteSpace(' ')
    PsiElement(method reference)('testMethod(int)')
    PsiErrorElement:AFTER, IF, KEYWORD_AT, KEYWORD_BIND, KEYWORD_HELPER or KEYWORD_LINE expected, got 'HELPER'
      <empty list>
  PsiWhiteSpace('\n')
  HELPER_STATEMENT
    PsiElement(KEYWORD_HELPER)('HELPER')
    PsiWhiteSpace(' ')
    CLASS_NAME
      PsiElement(class reference)('org.jboss.byteman.tests.helpers.Default')
  PsiWhiteSpace('\n')
  PsiErrorElement:'AT' unexpected
    PsiElement(KEYWORD_AT)('AT')
  PsiWhiteSpace(' ')
  PsiElement(DUMMY_BLOCK)
    PsiElement(INVOKE)('CALL')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('getCounter')
    PsiWhiteSpace(' ')
    PsiElement(KEYWORD_ALL)('ALL')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_BIND)('BIND')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Test')
    PsiWhiteSpace(' ')
    PsiElement(ASSIGN)('=')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(.)('.')
  PsiElement(DUMMY_BLOCK)
    PsiElement(IDENTIFIER)('getTest')
    PsiElement(LPAREN)('(')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(IF)('IF')
    PsiWhiteSpace(' ')
    PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_DO)('DO')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('log')
    PsiElement(LPAREN)('(')
  PsiElement(string)('"')
  PsiElement(string)('testMethod CALL getCounter ')
  PsiElement(string)('"')
  PsiWhiteSpace(' ')
  PsiElement(PLUS)('+')
  PsiWhiteSpace(' ')
  PsiElement(DOLLAR)('$currentCounter')
  PsiElement(RPAREN)(')')
  PsiWhiteSpace('\n')
  PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('test call setCounter ALL in testMethod')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_CLASS)('CLASS')
    PsiWhiteSpace(' ')
    PsiElement(class reference)('TestAllAuxiliary')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_METHOD)('METHOD')
    PsiWhiteSpace(' ')
    PsiElement(method reference)('testMethod(int)')
    PsiErrorElement:AFTER, IF, KEYWORD_AT, KEYWORD_BIND, KEYWORD_HELPER or KEYWORD_LINE expected, got 'HELPER'
      <empty list>
  PsiWhiteSpace('\n')
  HELPER_STATEMENT
    PsiElement(KEYWORD_HELPER)('HELPER')
    PsiWhiteSpace(' ')
    CLASS_NAME
      PsiElement(class reference)('org.jboss.byteman.tests.helpers.Default')
  PsiWhiteSpace('\n')
  PsiErrorElement:'AFTER' unexpected
    PsiElement(AFTER)('AFTER')
  PsiWhiteSpace(' ')
  PsiElement(DUMMY_BLOCK)
    PsiElement(INVOKE)('CALL')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('setCounter')
    PsiWhiteSpace(' ')
    PsiElement(KEYWORD_ALL)('ALL')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_BIND)('BIND')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Test')
    PsiWhiteSpace(' ')
    PsiElement(ASSIGN)('=')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(.)('.')
  PsiElement(DUMMY_BLOCK)
    PsiElement(IDENTIFIER)('getTest')
    PsiElement(LPAREN)('(')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(IF)('IF')
    PsiWhiteSpace(' ')
    PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_DO)('DO')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('log')
    PsiElement(LPAREN)('(')
  PsiElement(string)('"')
  PsiElement(string)('testMethod CALL setCounter ')
  PsiElement(string)('"')
  PsiWhiteSpace(' ')
  PsiElement(PLUS)('+')
  PsiWhiteSpace(' ')
  PsiElement(DOLLAR)('$currentCounter')
  PsiElement(RPAREN)(')')
  PsiWhiteSpace('\n')
  PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('test AT SYNCHRONIZE ALL in testMethod2')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_CLASS)('CLASS')
    PsiWhiteSpace(' ')
    PsiElement(class reference)('TestAllAuxiliary')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_METHOD)('METHOD')
    PsiWhiteSpace(' ')
    PsiElement(method reference)('testMethod2(int)')
    PsiErrorElement:AFTER, IF, KEYWORD_AT, KEYWORD_BIND, KEYWORD_HELPER or KEYWORD_LINE expected, got 'HELPER'
      <empty list>
  PsiWhiteSpace('\n')
  HELPER_STATEMENT
    PsiElement(KEYWORD_HELPER)('HELPER')
    PsiWhiteSpace(' ')
    CLASS_NAME
      PsiElement(class reference)('org.jboss.byteman.tests.helpers.Default')
  PsiWhiteSpace('\n')
  PsiErrorElement:'AT' unexpected
    PsiElement(KEYWORD_AT)('AT')
  PsiWhiteSpace(' ')
  PsiElement(DUMMY_BLOCK)
    PsiElement(KEYWORD_WRITE)('SYNCHRONIZE')
    PsiWhiteSpace(' ')
    PsiElement(KEYWORD_ALL)('ALL')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_BIND)('BIND')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Test')
    PsiWhiteSpace(' ')
    PsiElement(ASSIGN)('=')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('getTest')
  PsiElement(DUMMY_BLOCK)
    PsiElement(LPAREN)('(')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(IF)('IF')
    PsiWhiteSpace(' ')
    PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_DO)('DO')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('log')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
  PsiElement(string)('testMethod2 SYNCHRONIZE ')
  PsiElement(string)('"')
  PsiWhiteSpace(' ')
  PsiElement(PLUS)('+')
  PsiWhiteSpace(' ')
  PsiElement(DOLLAR)('$currentCounter')
  PsiElement(RPAREN)(')')
  PsiWhiteSpace('\n')
  PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('test AT THROW ALL in testMethod3')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_CLASS)('CLASS')
    PsiWhiteSpace(' ')
    PsiElement(class reference)('TestAllAuxiliary')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_METHOD)('METHOD')
    PsiWhiteSpace(' ')
    PsiElement(method reference)('testMethod3(int)')
    PsiErrorElement:AFTER, IF, KEYWORD_AT, KEYWORD_BIND, KEYWORD_HELPER or KEYWORD_LINE expected, got 'HELPER'
      <empty list>
  PsiWhiteSpace('\n')
  HELPER_STATEMENT
    PsiElement(KEYWORD_HELPER)('HELPER')
    PsiWhiteSpace(' ')
    CLASS_NAME
      PsiElement(class reference)('org.jboss.byteman.tests.helpers.Default')
  PsiWhiteSpace('\n')
  PsiErrorElement:'AT' unexpected
    PsiElement(KEYWORD_AT)('AT')
  PsiWhiteSpace(' ')
  PsiElement(DUMMY_BLOCK)
    PsiElement(throw)('THROW')
    PsiWhiteSpace(' ')
    PsiElement(KEYWORD_ALL)('ALL')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_BIND)('BIND')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiWhiteSpace(' ')
    PsiElement(:)(':')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Test')
    PsiWhiteSpace(' ')
    PsiElement(ASSIGN)('=')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('getTest')
  PsiElement(DUMMY_BLOCK)
    PsiElement(LPAREN)('(')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(IF)('IF')
    PsiWhiteSpace(' ')
    PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_DO)('DO')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    PsiElement(.)('.')
    PsiElement(IDENTIFIER)('log')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
  PsiElement(string)('testMethod3 THROW ')
  PsiElement(string)('"')
  PsiWhiteSpace(' ')
  PsiElement(PLUS)('+')
  PsiWhiteSpace(' ')
  PsiElement(DOLLAR)('$currentCounter')
  PsiElement(RPAREN)(')')
  PsiWhiteSpace('\n')
  PsiElement(KEYWORD_ENDRULE)('ENDRULE')