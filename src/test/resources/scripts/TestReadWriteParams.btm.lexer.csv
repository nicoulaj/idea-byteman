Byteman:COMMENT;"##############################################################################\n# JBoss, Home of Professional Open Source\n# Copyright 2010, Red Hat and individual contributors\n# by the @authors tag. See the copyright.txt in the distribution for a\n# full listing of individual contributors.\n#\n# This is free software; you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as\n# published by the Free Software Foundation; either version 2.1 of\n# the License, or (at your option) any later version.\n#\n# This software is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this software; if not, write to the Free\n# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n# 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n#\n# @authors Andrew Dinn\n#\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT READ $1 triggered in TestReadWriteAuxiliary.testMethod2 : $1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT READ $arg1 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER READ $arg1 triggered in TestReadWriteAuxiliary.testMethod2 : $arg1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER READ $1 2 triggered in TestReadWriteAuxiliary.testMethod2 : $1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT WRITE $1 triggered in TestReadWriteAuxiliary.testMethod2 : $1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT WRITE $arg1 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER WRITE $1 triggered in TestReadWriteAuxiliary.testMethod2 : $1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER WRITE $arg1 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT READ $2 triggered in TestReadWriteAuxiliary.testMethod2 : $2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT READ $arg2 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER READ $arg2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER READ $2 2 triggered in TestReadWriteAuxiliary.testMethod2 : $2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT WRITE $2 triggered in TestReadWriteAuxiliary.testMethod2 : $2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT WRITE $arg2 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER WRITE $2 triggered in TestReadWriteAuxiliary.testMethod2 : $2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod2"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER WRITE $arg2 2 triggered in TestReadWriteAuxiliary.testMethod2 : $arg2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"all"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod3"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"READ"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ALL"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT READ $1 ALL triggered in TestReadWriteAuxiliary.testMethod3 : $1 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$1"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"after"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"all"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod3"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AFTER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ALL"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AFTER WRITE $arg2 ALL triggered in TestReadWriteAuxiliary.testMethod3 : $arg2 == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$arg2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"at"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:DOLLAR;"$d"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"all"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rule"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestReadWriteAuxiliary"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"testMethod3"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"WRITE"
WHITE_SPACE;" "
Byteman:DOLLAR;"$d"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ALL"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Test"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
Byteman:DOT;"."
Byteman:IDENTIFIER;"getTest"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""AT WRITE $d ALL triggered in TestReadWriteAuxiliary.testMethod3 : $d == ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:DOLLAR;"$d"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n"
