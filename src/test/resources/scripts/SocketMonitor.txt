FILE
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# JBoss, Home of Professional Open Source')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Copyright 2009-2010, Red Hat and individual contributors')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# by the @authors tag. See the copyright.txt in the distribution for a')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# full listing of individual contributors.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This is free software; you can redistribute it and/or modify it')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# under the terms of the GNU Lesser General Public License as')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# published by the Free Software Foundation; either version 2.1 of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# the License, or (at your option) any later version.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This software is distributed in the hope that it will be useful,')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# but WITHOUT ANY WARRANTY; without even the implied warranty of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Lesser General Public License for more details.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# You should have received a copy of the GNU Lesser General Public')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# License along with this software; if not, write to the Free')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# 02110-1301 USA, or see the FSF site: http://www.fsf.org.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# @authors Andrew Dinn')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# SocketMonitor')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# A byteman script which traces thread creation, start, run and exit')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# to use ths script to trace execution of java program org.my.App execute')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  -- set the directory in which byteman has been installed')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  BYTEMAN_HOME= ...')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- identify this script')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   SCRIPT={BYTEMAN_HOME}/sample/scripts/SocketMonitor.txt')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmjava.sh -l $SCRIPT -b org.my.App')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# alternatively to load the script dynamically')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- start the program with the agent')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmjava.sh org.my.App')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- install the script')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -l $SCRIPT')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace ServerSocket creation')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiElement(DUMMY_BLOCK)
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace create')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(int, int, InetAddress)')
      PsiWhiteSpace('\n')
      EXIT_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(KEYWORD_RETURN)('EXIT')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server create '
        PsiElement(string)('*** server create ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket creation failed with invalid port')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace create failed with invalid port')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(int, int, InetAddress)')
      PsiWhiteSpace('\n')
      THROW_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(throw)('THROW')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server create failed with invalid port '
        PsiElement(string)('*** server create failed with invalid port ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket creation failed with security exception')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace create failed with security exception')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(int, int, InetAddress)')
      PsiWhiteSpace('\n')
      THROW_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(throw)('THROW')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('2')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server create failed with security exception '
        PsiElement(string)('*** server create failed with security exception ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket creation failed with IOException')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace create failed with IOException')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(int, int, InetAddress)')
      PsiWhiteSpace('\n')
      THROW_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(throw)('THROW')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('3')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server create failed with IOException '
        PsiElement(string)('*** server create failed with IOException ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket bind')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace bind')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('^java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('bind(SocketAddress, int)')
      PsiWhiteSpace('\n')
      EXIT_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(KEYWORD_RETURN)('EXIT')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server bind '
        PsiElement(string)('*** server bind ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket accept')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace accept')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('^java.net.ServerSocket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('accept()')
      PsiWhiteSpace('\n')
      EXIT_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(KEYWORD_RETURN)('EXIT')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** server accept '
        PsiElement(string)('*** server accept ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace ServerSocket close')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# the AT CALL close location means we do not trace calls to already closed sockets')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('ServerSocket trace close')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      PsiElement(class reference)('^java.net.ServerSocket')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('close')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(INVOKE)('CALL')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('close')
      PsiWhiteSpace('\n')
      PsiErrorElement:'.' or LPAREN expected, got 'IF'
        PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      PsiElement(DUMMY_BLOCK)
        PsiElement(boolean)('TRUE')
        PsiWhiteSpace('\n')
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('traceStack')
        PsiElement(LPAREN)('(')
        PsiElement(string)('"')
        PsiElement(string)('*** server close ')
        PsiElement(string)('"')
        PsiWhiteSpace(' ')
        PsiElement(PLUS)('+')
        PsiWhiteSpace(' ')
        PsiElement(DOLLAR)('$0')
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace socket create')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('Socket trace create')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.Socket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(SocketAddress, SocketAddress, boolean)')
      PsiWhiteSpace('\n')
      EXIT_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(KEYWORD_RETURN)('EXIT')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** create '
        PsiElement(string)('*** create ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace socket create failed with invalid address')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('Socket trace create failed with invalid address')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.Socket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(SocketAddress, SocketAddress, boolean)')
      PsiWhiteSpace('\n')
      THROW_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(throw)('THROW')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** create failed with invalid address exception '
        PsiElement(string)('*** create failed with invalid address exception ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiComment(comment)('########################################################################')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiComment(comment)('# Rule to trace socket create failed with IOException')
    PsiWhiteSpace('\n')
    PsiComment(comment)('#')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    RULE
      PsiElement(KEYWORD_RULE)('RULE')
      PsiWhiteSpace(' ')
      PsiElement(rule name)('Socket trace create failed with IOException')
      PsiWhiteSpace('\n')
      CLASS_STATEMENT
        PsiElement(KEYWORD_CLASS)('CLASS')
        PsiWhiteSpace(' ')
        CLASS_NAME
          PsiElement(class reference)('java.net.Socket')
      PsiWhiteSpace('\n')
      METHOD_STATEMENT
        PsiElement(KEYWORD_METHOD)('METHOD')
        PsiWhiteSpace(' ')
        PsiElement(method reference)('<init>(SocketAddress, SocketAddress, boolean)')
      PsiWhiteSpace('\n')
      THROW_LOCATION
        PsiElement(KEYWORD_AT)('AT')
        PsiWhiteSpace(' ')
        PsiElement(throw)('THROW')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('2')
      PsiWhiteSpace('\n')
      IF_STATEMENT
        PsiElement(IF)('IF')
        PsiWhiteSpace(' ')
        CONDITION
          EXPR
            SIMPLE_EXPR
              PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      DO_STATEMENT
        PsiElement(KEYWORD_DO)('DO')
        PsiWhiteSpace(' ')
        EXPR_ACTIONS
          EXPR
            IDENTIFIER_EXPR
              PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** create failed with IOException '
        PsiElement(string)('*** create failed with IOException ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiElement(INTEGER_LITERAL)('15')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace socket bind')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('Socket trace bind')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('^java.net.Socket')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('bind(SocketAddress)')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('EXIT')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** bind '
      PsiElement(string)('*** bind ')
    PsiElement(string)('"')
    PsiWhiteSpace(' ')
    PsiElement(PLUS)('+')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('15')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace socket connect')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('Socket trace connect')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('^java.net.Socket')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('connect(SocketAddress, int)')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('EXIT')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** connect '
      PsiElement(string)('*** connect ')
    PsiElement(string)('"')
    PsiWhiteSpace(' ')
    PsiElement(PLUS)('+')
    PsiWhiteSpace(' ')
    PsiElement(DOLLAR)('$0')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('15')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace socket close')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# the AT CALL close location means we do not trace calls to already closed sockets')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('Socket trace close')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_CLASS)('CLASS')
    PsiWhiteSpace(' ')
    PsiElement(class reference)('^java.net.Socket')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_METHOD)('METHOD')
    PsiWhiteSpace(' ')
    PsiElement(method reference)('close()')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_AT)('AT')
    PsiWhiteSpace(' ')
    PsiElement(INVOKE)('CALL')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('close')
    PsiWhiteSpace('\n')
    PsiErrorElement:'.' or LPAREN expected, got 'IF'
      PsiElement(IF)('IF')
    PsiWhiteSpace(' ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(boolean)('TRUE')
      PsiWhiteSpace('\n')
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('traceStack')
      PsiElement(LPAREN)('(')
      PsiElement(string)('"')
      PsiElement(string)('*** close ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('15')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')