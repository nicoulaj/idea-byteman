Byteman:COMMENT;"##############################################################################\n# JBoss, Home of Professional Open Source\n# Copyright 2009, Red Hat and individual contributors\n# by the @authors tag. See the copyright.txt in the distribution for a\n# full listing of individual contributors.\n#\n# This is free software; you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as\n# published by the Free Software Foundation; either version 2.1 of\n# the License, or (at your option) any later version.\n#\n# This software is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this software; if not, write to the Free\n# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n# 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n#\n# @authors Andrew Dinn\n#\n# Test for BYTEMAN-38\n"
WHITE_SPACE;"\n"
Byteman:COMMENT;"##############################################################################\n# when test is entered we need to set up a rendezvous\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"setup"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"createRendezvous"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n\n"
Byteman:COMMENT;"##############################################################################\n# when ensureSignalWake is called we need to ensure that another thread has\n# called signalWake. our helper specialises signalWake to allow this to be\n# checked\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureSignalWait"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureSignalWake"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureSignalWake"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when ensureWaitFor is called we need to ensure that another thread has\n# called waitFor. our helper specialises waitFor to allow this to be\n# checked\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureWaitFor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureWaitFor"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureWaitFor"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when triggerWaitFor is called we need to do a waitFor\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerWaitFor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerWaitFor"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestEmptySignature"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""waitFor""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"waitFor"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when triggerSignalWake is called we need to do a signalWake\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerSignalWake"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerSignalWake"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestEmptySignature"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""signalWake""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"signalWake"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when triggerRendezvous is called we need to do a rendezvous\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerRendezvous"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerRendezvous"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rendezvous"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when triggerTimeoutCheck is called we need to wait and, if we timeout\n# throw an Exception\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerTimeoutCheck"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerTimeoutCheck"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"waitFor"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""timeout""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"60"
WHITE_SPACE;" "
Byteman:MUL;"*"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1000"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:THROW_KEYWORD;"throw"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Exception"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""failed with timeout""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################\n# when triggerTimeoutCancel is called we need to call signalThrow to cause\n# a runtime exception in the main thread.\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerTimeoutCancel"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerTimeoutCancel"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"signalThrow"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""timeout""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
