Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# JBoss, Home of Professional Open Source"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Copyright 2009, Red Hat and individual contributors"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# by the @authors tag. See the copyright.txt in the distribution for a"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# full listing of individual contributors."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# This is free software; you can redistribute it and/or modify it"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# under the terms of the GNU Lesser General Public License as"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# published by the Free Software Foundation; either version 2.1 of"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# the License, or (at your option) any later version."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# This software is distributed in the hope that it will be useful,"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# but WITHOUT ANY WARRANTY; without even the implied warranty of"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Lesser General Public License for more details."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# You should have received a copy of the GNU Lesser General Public"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# License along with this software; if not, write to the Free"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# 02110-1301 USA, or see the FSF site: http://www.fsf.org."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# @authors Andrew Dinn"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Test for BYTEMAN-38"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when test is entered we need to set up a rendezvous"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"setup"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"test"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"createRendezvous"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when ensureSignalWake is called we need to ensure that another thread has"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# called signalWake. our helper specialises signalWake to allow this to be"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# checked"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"ensureSignalWait"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"ensureSignalWake"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureSignalWake"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when ensureWaitFor is called we need to ensure that another thread has"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# called waitFor. our helper specialises waitFor to allow this to be"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# checked"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"ensureWaitFor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"ensureWaitFor"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ensureWaitFor"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when triggerWaitFor is called we need to do a waitFor"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"triggerWaitFor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"triggerWaitFor"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestEmptySignature"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""waitFor""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"waitFor"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when triggerSignalWake is called we need to do a signalWake"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"triggerSignalWake"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"triggerSignalWake"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestEmptySignature"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""signalWake""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"signalWake"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when triggerRendezvous is called we need to do a rendezvous"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"triggerRendezvous"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"triggerRendezvous"
WHITE_SPACE;"\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.tests.helpers.TestWaitAfterSignalWakeMustMeetHelper"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"rendezvous"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when triggerTimeoutCheck is called we need to wait and, if we timeout"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# throw an Exception"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"triggerTimeoutCheck"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"triggerTimeoutCheck"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"waitFor"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""timeout""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"60"
WHITE_SPACE;" "
Byteman:MUL;"*"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1000"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:THROW_KEYWORD;"throw"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Exception"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""failed with timeout""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"##############################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when triggerTimeoutCancel is called we need to call signalThrow to cause"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# a runtime exception in the main thread."
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"triggerTimeoutCancel"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"TestWaitAfterSignalWakeMustMeet"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"triggerTimeoutCancel"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"signalThrow"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""timeout""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
