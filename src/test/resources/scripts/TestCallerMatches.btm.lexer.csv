Byteman:COMMENT;"##############################################################################\n# JBoss, Home of Professional Open Source\n# Copyright 2010, Red Hat and individual contributors\n# by the @authors tag. See the copyright.txt in the distribution for a\n# full listing of individual contributors.\n#\n# This is free software; you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as\n# published by the Free Software Foundation; either version 2.1 of\n# the License, or (at your option) any later version.\n#\n# This software is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this software; if not, write to the Free\n# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n# 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n#\n# @authors Andrew Dinn\n#\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"first"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerMethod1"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ENTRY"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"callerEquals"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""test""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""caller match first caller""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"first"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"with"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"class"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerMethod2"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ENTRY"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"callerEquals"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""TestCallerMatches.test""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""caller match first caller with class""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"first"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"with"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"class"
WHITE_SPACE;" "
Byteman:AND;"and"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"package"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerMethod21"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ENTRY"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"callerMatches"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""org\.jboss\.byteman\.tests\.helpertests\.TestCallerMatches\.triggerMethod2""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""caller match first caller with class and package""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
Byteman:IDENTIFIER;"nd"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"in"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"range"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerMethod211"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ENTRY"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"callerEquals"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""triggerMethod2""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""caller match 2nd caller in range""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1"
Byteman:IDENTIFIER;"st"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"in"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"range"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"triggerMethod212"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"tests"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helpers"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Default"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ENTRY"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:COLON;":"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"TestCallerMatches"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:DOLLAR;"$0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"callerEquals"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""triggerMethod21""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"2"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
Byteman:DOT;"."
Byteman:IDENTIFIER;"log"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""caller match 1st caller in range""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"test"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"match"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
Byteman:QUOTEDIDENT;"'s caller in range"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"CLASS TestCallerMatches"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"METHOD triggerMethod3111()"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"HELPER org.jboss.byteman.tests.helpers.Default"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"AT ENTRY"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"BIND test : TestCallerMatches = $0"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"IF callerMatches("triggerMethod31", 2, 2)"
ERROR_ELEMENT;"\n"
Byteman:QUOTEDIDENT;"DO test.log("caller match caller"
Byteman:IDENTIFIER;"'s"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"caller"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"in"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"range"
Byteman:STRING_LITERAL;"")"
ERROR_ELEMENT;"\n"
Byteman:STRING_LITERAL;"ENDRULE"
ERROR_ELEMENT;"\n\n"
