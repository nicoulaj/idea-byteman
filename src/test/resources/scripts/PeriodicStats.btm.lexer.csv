Byteman:COMMENT;"########################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# JBoss, Home of Professional Open Source"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Copyright 2010, Red Hat and individual contributors"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# by the @authors tag. See the copyright.txt in the distribution for a"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# full listing of individual contributors."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# This is free software; you can redistribute it and/or modify it"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# under the terms of the GNU Lesser General Public License as"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# published by the Free Software Foundation; either version 2.1 of"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# the License, or (at your option) any later version."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# This software is distributed in the hope that it will be useful,"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# but WITHOUT ANY WARRANTY; without even the implied warranty of"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Lesser General Public License for more details."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# You should have received a copy of the GNU Lesser General Public"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# License along with this software; if not, write to the Free"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# 02110-1301 USA, or see the FSF site: http://www.fsf.org."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# @authors Andrew Dinn"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# Preiodic Statistics Display"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# A byteman script which collects statistics for actions performed by the"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# JVM runtime and uses the periodic helper to dump and clear them at regular"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# intervals"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# to use ths script to trace execution of java program org.my.App execute"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  -- set the directory in which byteman has been installed"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  BYTEMAN_HOME= ..."
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   -- identify the samples helper jar to the boot path"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   SAMPLE_JAR=${BYTEMAN_HOME}/sample/lib/byteman-sample.jar"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   -- identify this script"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   SCRIPT={BYTEMAN_HOME}/sample/scripts/PeriodicStats.txt"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  ${BYTEMAN_HOME}/bin/bmjava.sh -l $SCRIPT -b $SAMPLE_JAR org.my.App"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# alternatively to load the script dynamically"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   -- start the program with the agent"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  ${BYTEMAN_HOME}/bin/bmjava.sh org.my.App"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   -- install the helper library into the bootstrap classpath"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -b $SAMPLE_JAR"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#   -- install the script"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -l $SCRIPT"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"########################################################################"
WHITE_SPACE;"\n"
Byteman:COMMENT;"#"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# all rules in this script use the periodic helper which provides support"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# for triggering of rules at regular intervals. The helper adds a"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# thread in the background when it is activated i.e. when any of the rules"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# which employs the helper is first triggered. The thread is shut down"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# when the helper is deactivated i.e. once all rules using the helper"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# have been uninstalled."
WHITE_SPACE;"\n\n"
Byteman:HELPER_KEYWORD;"HELPER "
Byteman:CLASS_REF;"org.jboss.byteman.sample.helper.PeriodicHelper"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# This rule defines the wait interval between periodic triggers. The periodic"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# helper thread calls getPeriod when it is started. The rule forces getPeriod"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# to return 30,000 causing the thread to wake up at 30 second intervals."
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"set period"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"PeriodicHelper"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"getPeriod()"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"30"
WHITE_SPACE;" "
Byteman:MUL;"*"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1000"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule is triggered every 30 seconds when the periodic helper thread"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# calls method periodicTrigger. It reads and zeroes all the stats counters"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# and the prints a formatted trace of JVM activity in the 30 second interval."
WHITE_SPACE;"\n\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"dump stats"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"PeriodicHelper"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"periodicTrigger()"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadCreates"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread creates""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadStarts"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread starts""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadRuns"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread runs""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadExits"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread exits""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileInOpens"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileOutOpens"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileInCloses"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in closes""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileOutCloses"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out closes""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"classLoads"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""class loads""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Periodic Statistics""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread creates    ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadCreates"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread starts     ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadStarts"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread runs       ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadRuns"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread exits      ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadExits"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [in] opens   ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileInOpens"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [out] opens  ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileOutOpens"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [in] closes  ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileInCloses"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [out] closes ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileOutCloses"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Class loads       ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"classLoads"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# The remaining rules increment stats counters whenever a sigificant"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# event occurs in the JVM."
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread creates"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count thread create"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.lang.Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"<init>"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread creates""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread starts"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count thread start"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.lang.Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"start()"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"CALL"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"start0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread starts""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread runs"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count thread run"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"^java.lang.Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"run()"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:NOT;"!"
Byteman:IDENTIFIER;"callerMatches"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;"".*""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread runs""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread exits"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count thread exit"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"^java.lang.Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"exit()"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread exits""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream opens for read from a File"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file open read File"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"<init>(java.io.File)"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream opens for read from a File Descriptor"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file open read File Descriptor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"<init>(FileDescriptor)"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream opens for write from a File"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file open write File"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"<init>(java.io.File, boolean)"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream opens for write from a File Descriptor"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file open write File Descriptor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"<init>(FileDescriptor)"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream closes for a File input stream"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file input stream close"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"close()"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in closes""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream closes for a File output stream"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count file output stream close"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"java.io.FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"close()"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out closes""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts class loads which result in a new class being defined"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE "
Byteman:RULE_NAME;"count class loads"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS "
Byteman:CLASS_REF;"^java.lang.ClassLoader"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD "
Byteman:METHOD_REF;"defineClass(String, byte[], int, int, ProtectionDomain)"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""class loads""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n\n\n\n"
