Byteman:COMMENT;"########################################################################\n# JBoss, Home of Professional Open Source\n# Copyright 2010, Red Hat and individual contributors\n# by the @authors tag. See the copyright.txt in the distribution for a\n# full listing of individual contributors.\n#\n# This is free software; you can redistribute it and/or modify it\n# under the terms of the GNU Lesser General Public License as\n# published by the Free Software Foundation; either version 2.1 of\n# the License, or (at your option) any later version.\n#\n# This software is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this software; if not, write to the Free\n# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n# 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n#\n# @authors Andrew Dinn\n#\n# Preiodic Statistics Display\n#\n# A byteman script which collects statistics for actions performed by the\n# JVM runtime and uses the periodic helper to dump and clear them at regular\n# intervals\n#\n# to use ths script to trace execution of java program org.my.App execute\n#\n#  -- set the directory in which byteman has been installed\n#  BYTEMAN_HOME= ...\n#\n#   -- identify the samples helper jar to the boot path\n#   SAMPLE_JAR=${BYTEMAN_HOME}/sample/lib/byteman-sample.jar\n#\n#   -- identify this script\n#   SCRIPT={BYTEMAN_HOME}/sample/scripts/PeriodicStats.txt\n#\n#  ${BYTEMAN_HOME}/bin/bmjava.sh -l $SCRIPT -b $SAMPLE_JAR org.my.App\n#\n# alternatively to load the script dynamically\n#\n#   -- start the program with the agent\n#  ${BYTEMAN_HOME}/bin/bmjava.sh org.my.App\n#\n#   -- install the helper library into the bootstrap classpath\n#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -b $SAMPLE_JAR\n#\n#   -- install the script\n#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -l $SCRIPT\n"
WHITE_SPACE;"\n"
Byteman:COMMENT;"########################################################################\n#\n# all rules in this script use the periodic helper which provides support\n# for triggering of rules at regular intervals. The helper adds a\n# thread in the background when it is activated i.e. when any of the rules\n# which employs the helper is first triggered. The thread is shut down\n# when the helper is deactivated i.e. once all rules using the helper\n# have been uninstalled.\n"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"HELPER"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"org"
Byteman:DOT;"."
Byteman:IDENTIFIER;"jboss"
Byteman:DOT;"."
Byteman:IDENTIFIER;"byteman"
Byteman:DOT;"."
Byteman:IDENTIFIER;"sample"
Byteman:DOT;"."
Byteman:IDENTIFIER;"helper"
Byteman:DOT;"."
Byteman:IDENTIFIER;"PeriodicHelper"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# This rule defines the wait interval between periodic triggers. The periodic\n# helper thread calls getPeriod when it is started. The rule forces getPeriod\n# to return 30,000 causing the thread to wake up at 30 second intervals.\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"set"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"period"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"PeriodicHelper"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"getPeriod"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"30"
WHITE_SPACE;" "
Byteman:MUL;"*"
WHITE_SPACE;" "
Byteman:INTEGER_LITERAL;"1000"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule is triggered every 30 seconds when the periodic helper thread\n# calls method periodicTrigger. It reads and zeroes all the stats counters\n# and the prints a formatted trace of JVM activity in the 30 second interval.\n"
WHITE_SPACE;"\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"dump"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"stats"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"PeriodicHelper"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"periodicTrigger"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:BIND_KEYWORD;"BIND"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadCreates"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread creates""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadStarts"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread starts""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadRuns"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread runs""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"threadExits"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread exits""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileInOpens"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileOutOpens"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileInCloses"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in closes""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"fileOutCloses"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out closes""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n     "
Byteman:IDENTIFIER;"classLoads"
WHITE_SPACE;" "
Byteman:ASSIGN;"="
WHITE_SPACE;" "
Byteman:IDENTIFIER;"readCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""class loads""
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"true"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Periodic Statistics""
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread creates    ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadCreates"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread starts     ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadStarts"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread runs       ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadRuns"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Thread exits      ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"threadExits"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [in] opens   ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileInOpens"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [out] opens  ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileOutOpens"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [in] closes  ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileInCloses"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""File [out] closes ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"fileOutCloses"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""Class loads       ""
WHITE_SPACE;" "
Byteman:PLUS;"+"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"classLoads"
Byteman:RPAREN;")"
Byteman:SEMI;";"
WHITE_SPACE;"\n   "
Byteman:IDENTIFIER;"traceln"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# The remaining rules increment stats counters whenever a sigificant\n# event occurs in the JVM.\n"
WHITE_SPACE;"\n"
Byteman:COMMENT;"# this rule counts Thread creates\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"thread"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"create"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"lang"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:LT;"<"
Byteman:IDENTIFIER;"init"
Byteman:GT;">"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread creates""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread starts\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"thread"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"start"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"lang"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"start"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"CALL"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"start0"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread starts""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread runs\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"thread"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"run"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:BXOR;"^"
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"lang"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"run"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:NOT;"!"
Byteman:IDENTIFIER;"callerMatches"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;"".*""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread runs""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts Thread exits\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"thread"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"exit"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:BXOR;"^"
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"lang"
Byteman:DOT;"."
Byteman:IDENTIFIER;"Thread"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"exit"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""thread exits""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream opens for read from a File\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"open"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"File"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:LT;"<"
Byteman:IDENTIFIER;"init"
Byteman:GT;">"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"File"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream opens for read from a File Descriptor\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"open"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"read"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"File"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Descriptor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:LT;"<"
Byteman:IDENTIFIER;"init"
Byteman:GT;">"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"FileDescriptor"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream opens for write from a File\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"open"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"File"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:LT;"<"
Byteman:IDENTIFIER;"init"
Byteman:GT;">"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"File"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"boolean"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream opens for write from a File Descriptor\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"open"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"write"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"File"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"Descriptor"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:LT;"<"
Byteman:IDENTIFIER;"init"
Byteman:GT;">"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"FileDescriptor"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out opens""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileInputStream closes for a File input stream\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"input"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"stream"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"close"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileInputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"close"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file in closes""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts FileOutputStream closes for a File output stream\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"file"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"output"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"stream"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"close"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"io"
Byteman:DOT;"."
Byteman:IDENTIFIER;"FileOutputStream"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"close"
Byteman:LPAREN;"("
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""file out closes""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n"
Byteman:COMMENT;"# this rule counts class loads which result in a new class being defined\n"
Byteman:RULE_KEYWORD;"RULE"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"count"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"class"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"loads"
WHITE_SPACE;"\n"
Byteman:CLASS_KEYWORD;"CLASS"
WHITE_SPACE;" "
Byteman:BXOR;"^"
Byteman:IDENTIFIER;"java"
Byteman:DOT;"."
Byteman:IDENTIFIER;"lang"
Byteman:DOT;"."
Byteman:IDENTIFIER;"ClassLoader"
WHITE_SPACE;"\n"
Byteman:METHOD_KEYWORD;"METHOD"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"defineClass"
Byteman:LPAREN;"("
Byteman:IDENTIFIER;"String"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"byte"
Byteman:LSQUARE;"["
Byteman:RSQUARE;"]"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"int"
Byteman:COMMA;","
WHITE_SPACE;" "
Byteman:IDENTIFIER;"ProtectionDomain"
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:IDENTIFIER;"AT"
WHITE_SPACE;" "
Byteman:RETURN_KEYWORD;"RETURN"
WHITE_SPACE;"\n"
Byteman:IF_KEYWORD;"IF"
WHITE_SPACE;" "
Byteman:TRUE_KEYWORD;"TRUE"
WHITE_SPACE;"\n"
Byteman:DO_KEYWORD;"DO"
WHITE_SPACE;" "
Byteman:IDENTIFIER;"incrementCounter"
Byteman:LPAREN;"("
Byteman:STRING_LITERAL;""class loads""
Byteman:RPAREN;")"
WHITE_SPACE;"\n"
Byteman:ENDRULE_KEYWORD;"ENDRULE"
WHITE_SPACE;"\n\n\n\n\n"
