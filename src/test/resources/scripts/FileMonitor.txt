FILE
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# JBoss, Home of Professional Open Source')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Copyright 2009-2010, Red Hat and individual contributors')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# by the @authors tag. See the copyright.txt in the distribution for a')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# full listing of individual contributors.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This is free software; you can redistribute it and/or modify it')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# under the terms of the GNU Lesser General Public License as')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# published by the Free Software Foundation; either version 2.1 of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# the License, or (at your option) any later version.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# This software is distributed in the hope that it will be useful,')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# but WITHOUT ANY WARRANTY; without even the implied warranty of')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Lesser General Public License for more details.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# You should have received a copy of the GNU Lesser General Public')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# License along with this software; if not, write to the Free')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# 02110-1301 USA, or see the FSF site: http://www.fsf.org.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# @authors Andrew Dinn')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# FileMonitor')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# A byteman script which prints a stack trace whenever a file input or')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# output stream is created from a File instance or subsequently closed.')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# to use ths script to trace execution of java program org.my.App execute')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  -- set the directory in which byteman has been installed')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  BYTEMAN_HOME= ...')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- identify this script')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   SCRIPT={BYTEMAN_HOME}/sample/scripts/FileMonitor.txt')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmjava.sh -l $SCRIPT org.my.App')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# alternatively to load the script dynamically')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- start the program with the agent')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmjava.sh org.my.App')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#   -- install the script')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#  ${BYTEMAN_HOME}/bin/bmsubmit.sh -l $SCRIPT')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace create of file input stream from File')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('FileMonitor trace FileInputStream create from File')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('java.io.FileInputStream')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('<init>(java.io.File)')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('RETURN')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** Opened '
      PsiElement(string)('*** Opened ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$1')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getPath')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)(' for read in thread ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('Thread')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('currentThread')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getName')
      PsiElement(LPAREN)('(')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace(' ')
    PsiElement(PLUS)('+')
    PsiWhiteSpace(' ')
    PsiElement(string)('"')
    PsiElement(string)('\n')
    PsiElement(string)('"')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('10')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace close of file input stream close')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('FileMonitor trace FileInputStream close')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('java.io.FileInputStream')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('close')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('RETURN')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** Closed '
      PsiElement(string)('*** Closed ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)(' in thread ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('Thread')
      PsiElement(.)('.')
    PsiElement(DUMMY_BLOCK)
      PsiElement(IDENTIFIER)('currentThread')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getName')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)('\n')
    PsiElement(string)('"')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('10')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace create of file output stream from File')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('FileMonitor trace FileOutputStream create from File')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('java.io.FileOutputStream')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('<init>(java.io.File, boolean)')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('RETURN')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    PsiWhiteSpace(' ')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** Opened '
      PsiElement(string)('*** Opened ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$1')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getPath')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)(' for ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(LPAREN)('(')
      PsiElement(DOLLAR)('$2')
      PsiWhiteSpace(' ')
      PsiElement(TERN_IF)('?')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)('write')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(:)(':')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('append')
      PsiElement(string)('"')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiElement(string)('"')
      PsiElement(string)(' in thread ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('Thread')
      PsiElement(.)('.')
    PsiElement(DUMMY_BLOCK)
      PsiElement(IDENTIFIER)('currentThread')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getName')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)('\n')
    PsiElement(string)('"')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('10')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  PsiComment(comment)('########################################################################')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiComment(comment)('# Rule to trace close of file output')
  PsiWhiteSpace('\n')
  PsiComment(comment)('#')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  RULE
    PsiElement(KEYWORD_RULE)('RULE')
    PsiWhiteSpace(' ')
    PsiElement(rule name)('FileMonitor trace FileOutputStream close')
    PsiWhiteSpace('\n')
    CLASS_STATEMENT
      PsiElement(KEYWORD_CLASS)('CLASS')
      PsiWhiteSpace(' ')
      CLASS_NAME
        PsiElement(class reference)('java.io.FileOutputStream')
    PsiWhiteSpace('\n')
    METHOD_STATEMENT
      PsiElement(KEYWORD_METHOD)('METHOD')
      PsiWhiteSpace(' ')
      PsiElement(method reference)('close()')
    PsiWhiteSpace('\n')
    EXIT_LOCATION
      PsiElement(KEYWORD_AT)('AT')
      PsiWhiteSpace(' ')
      PsiElement(KEYWORD_RETURN)('RETURN')
    PsiWhiteSpace('\n')
    IF_STATEMENT
      PsiElement(IF)('IF')
      PsiWhiteSpace(' ')
      CONDITION
        EXPR
          SIMPLE_EXPR
            PsiElement(boolean)('TRUE')
    PsiWhiteSpace('\n')
    DO_STATEMENT
      PsiElement(KEYWORD_DO)('DO')
      PsiWhiteSpace(' ')
      EXPR_ACTIONS
        EXPR
          IDENTIFIER_EXPR
            PsiElement(IDENTIFIER)('traceStack')
    PsiElement(LPAREN)('(')
    PsiElement(string)('"')
    PsiErrorElement:'.', ';', COMMA, LSQUARE or RPAREN expected, got '*** Closed '
      PsiElement(string)('*** Closed ')
    PsiElement(DUMMY_BLOCK)
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(DOLLAR)('$0')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)(' in thread ')
      PsiElement(string)('"')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(IDENTIFIER)('Thread')
      PsiElement(.)('.')
    PsiElement(DUMMY_BLOCK)
      PsiElement(IDENTIFIER)('currentThread')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiElement(.)('.')
      PsiElement(IDENTIFIER)('getName')
      PsiElement(LPAREN)('(')
      PsiElement(RPAREN)(')')
      PsiWhiteSpace(' ')
      PsiElement(PLUS)('+')
      PsiWhiteSpace(' ')
      PsiElement(string)('"')
      PsiElement(string)('\n')
    PsiElement(string)('"')
    PsiElement(COMMA)(',')
    PsiWhiteSpace(' ')
    PsiElement(INTEGER_LITERAL)('10')
    PsiElement(RPAREN)(')')
    PsiWhiteSpace('\n')
    PsiElement(KEYWORD_ENDRULE)('ENDRULE')